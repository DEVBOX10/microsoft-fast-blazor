name: Microsoft Fast-Blazor Publish

pr: none
trigger: none

pool:
  vmImage: 'windows-latest'

variables:
  project: 'src\Microsoft.Fast.Components.FluentUI\Microsoft.Fast.Components.FluentUI.csproj'
  buildPlatform: 'Any CPU'
  buildConfiguration: 'Release'

steps:
- task: NuGetToolInstaller@1
  displayName: Install NuGet tools

- task: NuGetCommand@2
  displayName: Install dependencies
  inputs:
    restoreSolution: '$(project)'
    
- task: DotNetCoreCLI@2
  displayName: Build
  inputs:
    command: 'build'
    nugetConfigPath: $(project)

- task: DotNetCoreCLI@2
  displayName: Test
  inputs:
    command: 'test'

- task: DotNetCoreCLI@2
  displayName: Pack
  inputs:
    command: 'pack'
    packagesToPack: '**/Microsoft.Fast.Components.FluentUI.csproj'
    versioningScheme: 'off'

- task: EsrpCodeSigning@1
  displayName: Code Signing Assemblies (Authenticode Signing)
  inputs:
    ConnectedServiceName: 'FAST-NuGet-Publishing-SC'
    FolderPath: '$(Build.ArtifactStagingDirectory)'
    Pattern: | 
      **/*.nupkg
    UseMinimatch: true
    signConfigType: 'inlineSignParams'
    inlineOperation: |
      [
        {
            "KeyCode" : "CP-401405",
            "OperationCode" : "NuGetSign",
            "Parameters" : {},
            "ToolName" : "sign",
            "ToolVersion" : "1.0"
        },
        {
            "KeyCode" : "CP-401405",
            "OperationCode" : "NuGetVerify",
            "Parameters" : {},
            "ToolName" : "sign",
            "ToolVersion" : "1.0"
        }
      ]
    SessionTimeout: '60'
    MaxConcurrency: '200'
    MaxRetryAttempts: '5'

- task: PublishBuildArtifacts@1
  inputs:
    PathtoPublish: '$(Build.ArtifactStagingDirectory)'
    ArtifactName: 'drop'
    publishLocation: 'Container'
- task: NuGetCommand@2
  displayName: Publish to GitHub
  inputs:
    command: 'push'
    packagesToPush: '$(Build.ArtifactStagingDirectory)\*.nupkg;'
    nuGetFeedType: 'internal'
    publishVstsFeed: 'b664c239-0000-4fa9-92c3-95b7f27d846a/366033a2-7aa6-4091-8ef1-856293cf5a9d'

- task: NuGetCommand@2
  displayName: Publish to NuGet
  inputs:
    command: 'push'
    packagesToPush: '$(Build.ArtifactStagingDirectory)\*.nupkg;'
    nuGetFeedType: 'external'
    publishFeedCredentials: 'NugetServiceConnect'